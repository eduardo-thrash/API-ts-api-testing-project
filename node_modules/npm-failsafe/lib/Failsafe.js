"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Failsafe = void 0;
var child_process_1 = require("child_process");
var readline = require("readline");
var Failsafe = /** @class */ (function () {
    function Failsafe(logger, config, env) {
        this.logger = logger;
        this.config = config;
        this.env = env;
    }
    Failsafe.prototype.run = function (scriptsName) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                if (scriptsName.length === 0) {
                    this.logger.error('failsafe', [
                        "Please specify which npm scripts you'd like to run, for example:",
                        "  npm failsafe start test"
                    ].join('\n'));
                    return [2 /*return*/, 1];
                }
                return [2 /*return*/, scriptsName.reduce(function (previous, script_name) {
                        return previous
                            .then(function (previous_exit_code) { return _this.runScript(script_name)
                            .then(function (current_exit_code) { return Math.max(previous_exit_code, current_exit_code); }); });
                    }, Promise.resolve(0))];
            });
        });
    };
    Failsafe.prototype.runScript = function (script_name) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var npm = process.platform.startsWith('win32')
                ? "npm.cmd"
                : "npm";
            var script = (0, child_process_1.spawn)(npm, ["run", script_name], {
                cwd: _this.config.cwd,
                env: __assign({ 'FORCE_COLOR': _this.config.isTTY ? '1' : undefined }, _this.env)
            });
            var stdout = readline.createInterface({ input: script.stdout }), stderr = readline.createInterface({ input: script.stderr });
            stdout
                .on('line', function (line) { return _this.logger.info(script_name, line); });
            stderr
                .on('line', function (line) { return _this.logger.error(script_name, line); });
            script.once('close', function (code) {
                stdout.close();
                stderr.close();
                _this.logger.info('failsafe', "Script '".concat(script_name, "' exited with code ").concat(code));
                resolve(code !== null && code !== void 0 ? code : 0);
            });
        });
    };
    return Failsafe;
}());
exports.Failsafe = Failsafe;
//# sourceMappingURL=Failsafe.js.map